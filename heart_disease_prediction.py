# -*- coding: utf-8 -*-
"""Heart-Disease-prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mkGJYF4m4hy9fEGSpGvgRTVs6gYGNyqm
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

heart_data = pd.read_csv('/content/heart_disease_data.csv')

heart_data.head()

heart_data.shape

heart_data.info()

heart_data.isnull().sum()

heart_data.describe()

heart_data['target'].value_counts()

X = heart_data.drop(columns = 'target', axis = 1)
Y = heart_data['target']

print(X)

print(Y)

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, stratify =Y, random_state=2)

print(X.shape, X_train.shape, X_test.shape)

model = LogisticRegression()

model.fit(X_train, Y_train)

X_train_prediction = model.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction, Y_train)

print("Accuracy on training data:", training_data_accuracy)

X_test_prediction = model.predict(X_test)
test_data_accuracy = accuracy_score(X_test_prediction, Y_test)

print("Accuracy on Testing data:", test_data_accuracy)

input_data = (62, 0, 0, 140, 268, 0, 0, 160, 0, 3.6, 0, 2, 2)
input_data_as_numpy_arrays = np.asarray(input_data)
input_data_reshaped = input_data_as_numpy_arrays.reshape(1, -1)
prediction = model.predict(input_data_reshaped)
print(prediction)
if(prediction[0]==0):
  print("The person does not have a heart disease")
else:
  print("The person has a heeart disease")

import pickle

filename = 'train_model.sav'
pickle.dump(model, open(filename, 'wb'))

loaded_model = pickle.load(open('train_model.sav', "rb"))

input_data = (62, 0, 0, 140, 268, 0, 0, 160, 0, 3.6, 0, 2, 2)
input_data_as_numpy_arrays = np.asarray(input_data)
input_data_reshaped = input_data_as_numpy_arrays.reshape(1, -1)
prediction = loaded_model.predict(input_data_reshaped)
print(prediction)
if(prediction[0]==0):
  print("The person does not have a heart disease")
else:
  print("The person has a heeart disease")

